#!/usr/bin/env python2
from dynamic_reconfigure.parameter_generator_catkin import *
PACKAGE = "asr_ism_visualizations"


gen = ParameterGenerator()

gen.add("markerLifetime", double_t, 0, "Time Markers are shown (0=permanent).", 0, 0, 120)
gen.add("baseFrame", str_t, 0, "Base Frame of scene for result visualization.", "/map")
gen.add("lineScale", double_t,0, "Width of lines for votingspace visualization.", 0.002, 0, 0.01)
gen.add("axisScale", double_t,0, "Lenght of coodinateaxis for votingspace visualization.", 0.02, 0, 0.1)
gen.add("binScale", double_t,0, "Size of bin in voxel for votingspace visualization.", 0.8, 0, 1)
gen.add("gridScale", double_t,0, "Width of grid for votingspace visualization.", 0.001, 0, 0.01)
gen.add("objectMarkerScale", double_t,0, "Scaling of objectmarker for votingspace visualization.", 0.05, 0, 0.2)
gen.add("binOpacity", double_t,0, "Opacity of bins for votingspace visualization.", 0.5, 0, 1)
gen.add("gridOpacity", double_t,0, "Opacity of grid for votingspace visualization.", 0.5, 0, 1)
gen.add("voteOpacity", double_t,0, "Opacity of votes for votingspace visualization.", 0.1, 0, 1)
gen.add("objectMarkerOpacity", double_t,0, "Opacity of objectmarker for votingspace visualization.", 0.5, 0, 1)
gen.add("confidenceSphereOpacity", double_t,0, "Opacity of confidencesphere for votingspace visualization.", 0.2, 0, 1)
gen.add("patternname", str_t,0, "Name of pattern for votingspace visualization.", "Patternname")
gen.add("scenename", str_t,0, "Name of scene for votingspace visualization.", "Scenename")

exit(gen.generate(PACKAGE, "asr_ism_visualizations", "ism_voting_visualizer"))
